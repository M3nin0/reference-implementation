# (C) Copyright 2017 o2r project. https://o2r.info
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
---
version: '2'

volumes:
  o2rvol: {}

services:
  mongodb:
    image: mongo:3.4
    command: "--replSet rso2r"

  configmongodb:
    image: mongo:3.4
    depends_on:
      - mongodb
    command: bash -c "sleep 5; mongo --verbose --host mongodb --eval 'printjson(rs.initiate()); printjson(rs.conf()); printjson(rs.status()); printjson(rs.slaveOk());'"

  mongoadmin:
    image: adicom/admin-mongo:latest
    depends_on:
      - mongodb
    environment:
      - DB_HOST=mongodb
      - CONN_NAME=Local 
    ports:
      - "1234:1234"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.5
    environment:
      - cluster.name=o2rplatform-es-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "xpack.security.enabled=false"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g
#    ports:
#      - "9200:9200"
  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.5
    environment:
      - cluster.name=o2rplatform-es-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.zen.ping.unicast.hosts=elasticsearch"
      - "xpack.security.enabled=false"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g

  muncher:
    image: o2rproject/o2r-muncher:0.13.8
    restart: unless-stopped
    depends_on:
      - configmongodb
    volumes:
      - o2rvol:/tmp/o2r
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - "MUNCHER_MONGODB=mongodb://mongodb"
      - MUNCHER_PORT=8080
      - MUNCHER_VOLUME=referenceimplementation_o2rvol
      - MUNCHER_CONTAINER_USER=root
      - MUNCHER_CONTAINERIT_USER=root
      - DEBUG=*,-mquery,-express:*,-express-session,-body-parser:*

  loader:
    image: o2rproject/o2r-loader:0.8.3
    restart: unless-stopped
    depends_on:
      - configmongodb
    volumes:
      - o2rvol:/tmp/o2r
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - "LOADER_MONGODB=mongodb://mongodb"
      - LOADER_PORT=8088
      - DEBUG=*,-mquery,-express:*,-express-session,-body-parser:*
      - LOADER_VOLUME=referenceimplementation_o2rvol

  informer:
    image: o2rproject/o2r-informer:0.3.0
    restart: unless-stopped
    depends_on:
      - configmongodb
    environment:
      - "INFORMER_MONGODB=mongodb://mongodb"
      - INFORMER_MONGODB_HOST=mongodb
      - INFORMER_PORT=8082
      - DEBUG=informer

  bouncer:
    image: o2rproject/o2r-bouncer:0.10.1
    restart: unless-stopped
    depends_on:
      - configmongodb
    environment:
      - "BOUNCER_MONGODB=mongodb://mongodb"
      - BOUNCER_PORT=8083
      - DEBUG=bouncer
      - OAUTH_URL_CALLBACK=${OAUTH_URL_CALLBACK}
      - OAUTH_CLIENT_ID=${OAUTH_CLIENT_ID}
      - OAUTH_CLIENT_SECRET=${OAUTH_CLIENT_SECRET}
      - OAUTH_URL_AUTHORIZATION=${OAUTH_URL_AUTHORIZATION}
      - OAUTH_URL_TOKEN=${OAUTH_URL_TOKEN}
      - SLACK_VERIFICATION_TOKEN=${SLACK_VERIFICATION_TOKEN}
      - SLACK_BOT_TOKEN=${SLACK_BOT_TOKEN}

  finder:
    image: o2rproject/o2r-finder:0.6.0
    restart: unless-stopped
    depends_on:
      - configmongodb
      - elasticsearch
    volumes:
      - o2rvol:/tmp/o2r
    environment:
      - "FINDER_MONGODB=mongodb://mongodb"
      - FINDER_PORT=8084
      - DEBUG=finder,finder:*
      - ELASTIC_SEARCH_URL=elasticsearch:9200
      - "MONGO_DATA_URL=mongodb://mongodb/muncher"
      - "MONGO_OPLOG_URL=mongodb://mongodb/muncher"
      - BATCH_COUNT=20

  transporter:
    image: o2rproject/o2r-transporter:0.4.1
    restart: unless-stopped
    depends_on:
      - configmongodb
    volumes:
      - o2rvol:/tmp/o2r
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      - "TRANSPORTER_MONGODB=mongodb://mongodb"
      - TRANSPORTER_PORT=8081
      - DEBUG=transporter,transporter:*

  shipper:
    image: o2rproject/o2r-shipper:168ae80
    restart: unless-stopped
    depends_on:
      - configmongodb
    volumes:
      - o2rvol:/tmp/o2r
    environment:
      SHIPPER_MONGODB: "mongodb://mongodb"
      SHIPPER_REPO_TOKENS: "${SHIPPER_REPO_TOKENS}"
      SHIPPER_BOTTLE_HOST: "0.0.0.0"
      SHIPPER_BASE_PATH: "/tmp/o2r"
      PYTHONUNBUFFERED: "0"

  substituter:
    image: o2rproject/o2r-substituter:0.4.1
    restart: unless-stopped
    depends_on:
      - configmongodb
    volumes:
      - o2rvol:/tmp/o2r
    environment:
      - "SUBSTITUTER_MONGODB=mongodb://mongodb"
      - SUBSTITUTER_PORT=8090
      - DEBUG=substituter,substituter:*

  inspecter:
    image: o2rproject/o2r-inspecter:0.0.1
    restart: unless-stopped
    volumes:
      - o2rvol:/tmp/o2r
    environment:
      - INSPECTER_PORT=8091
      - DEBUGME=inspecter

  guestlister:
    image: o2rproject/o2r-guestlister:0.1.0
    restart: unless-stopped
    depends_on:
      - configmongodb
    environment:
      - "GUESTLISTER_MONGODB=mongodb://mongodb"
      - GUESTLISTER_PORT=8383
      - DEBUG=guestlister
      - OAUTH_URL_CALLBACK=${OAUTH_URL_CALLBACK}
      - OAUTH_CLIENT_ID=${OAUTH_CLIENT_ID}
      - OAUTH_CLIENT_SECRET=${OAUTH_CLIENT_SECRET}
      - OAUTH_URL_AUTHORIZATION=${OAUTH_URL_AUTHORIZATION}
      - OAUTH_URL_TOKEN=${OAUTH_URL_TOKEN}

  platform:
    image: o2rproject/o2r-platform:1.0.0
    restart: unless-stopped

  webserver:
    image: nginx:latest
    restart: unless-stopped
    depends_on:
      - bouncer
      - finder
      - muncher
      - informer
      - inspecter
      - loader
      - transporter
      - shipper
      - substituter
      - guestlister
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf:ro"
    ports:
      - "80:80"

